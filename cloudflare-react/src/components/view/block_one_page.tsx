import React, { useState, useRef } from 'react';
import {
  type BudgetItem,
  initialStateRoadItems,
  initialLocalRoadItems,
  calculateQ1,
  calculateQ2
} from '../../modules/block_one';
import { calculationResultsService } from '../../service/resultLocalStorage';
// shadcn/ui components
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { InfoCircledIcon } from "@radix-ui/react-icons";
import { UploadIcon, FileIcon, XIcon } from "lucide-react";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { setBlockOneBudgetData, getBudgetStatistics } from '../../modules/block_three';
// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è BudgetItem —Å —Ñ–∞–π–ª–∞–º–∏
interface ExtendedBudgetItem extends BudgetItem {
  attachedFiles?: File[];
}

const BlockThreeIntegration: React.FC<{
  q1Results: { value: number; items: ExtendedBudgetItem[] } | null;
  q2Results: { value: number; items: ExtendedBudgetItem[] } | null;
  sessionId: string | null;
}> = ({ q1Results, q2Results, sessionId }) => {
  const [isDataSent, setIsDataSent] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–ª–æ–∫ 3
  const sendDataToBlockThree = () => {
    if (!q1Results || !q2Results || !sessionId) {
      alert("–°–ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ–Ω–∞–π—Ç–µ –≤—Å—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏!");
      return;
    }

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º ExtendedBudgetItem –æ–±—Ä–∞—Ç–Ω–æ –≤ BudgetItem
    const convertToBasicItems = (items: ExtendedBudgetItem[]): BudgetItem[] => {
      return items.map(({ attachedFiles, ...item }) => item);
    };

    try {
      // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥—É–ª—å block_three
      setBlockOneBudgetData({
        q1Value: q1Results.value,
        q2Value: q2Results.value,
        q1Items: convertToBasicItems(q1Results.items),
        q2Items: convertToBasicItems(q2Results.items),
        sessionId: sessionId
      });

      setIsDataSent(true);
      setShowSuccess(true);
      setTimeout(() => setShowSuccess(false), 3000);

      console.log('–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ñ –≤ –ë–ª–æ–∫ 3');
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á—ñ –¥–∞–Ω–∏—Ö –≤ –ë–ª–æ–∫ 3:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á—ñ –¥–∞–Ω–∏—Ö –≤ –ë–ª–æ–∫ 3');
    }
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–∞–Ω–Ω—ã—Ö –≤ –ë–ª–æ–∫–µ 3
  const budgetStats = getBudgetStatistics();

  return (
    <Card className="mt-8 w-full border-blue-500 shadow-sm rounded-none">
      <CardHeader className="bg-blue-50 border-b border-blue-500">
        <CardTitle className="text-xl font-bold text-blue-800 flex items-center justify-between">
          <div>–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ –ë–ª–æ–∫–æ–º 3: –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–º–æ–Ω—Ç—ñ–≤</div>
          <div className="text-sm font-normal">
            {budgetStats.hasData ? (
              <span className="text-green-600">üü¢ –î–∞–Ω—ñ –ø–µ—Ä–µ–¥–∞–Ω—ñ</span>
            ) : (
              <span className="text-orange-600">üü° –û—á—ñ–∫—É—î –ø–µ—Ä–µ–¥–∞—á—ñ</span>
            )}
          </div>
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        {showSuccess && (
          <Alert className="mb-4 border-green-500 bg-green-50">
            <AlertDescription className="text-green-700">
              ‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ñ –≤ –ë–ª–æ–∫ 3 –¥–ª—è –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–º–æ–Ω—Ç—ñ–≤!
            </AlertDescription>
          </Alert>
        )}

        <div className="space-y-4">
          <div className="text-sm text-gray-600">
            <strong>–î–∞–Ω—ñ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –≤ –ë–ª–æ–∫ 3:</strong>
          </div>
          
          <div className="grid grid-cols-3 gap-4 text-center">
            <div className="p-3 bg-gray-50 rounded">
              <div className="text-lg font-bold text-gray-800">
                {q1Results?.value.toLocaleString() || '‚Äî'} —Ç–∏—Å. –≥—Ä–Ω
              </div>
              <div className="text-xs text-gray-600">Q‚ÇÅ (–î–µ—Ä–∂–∞–≤–Ω—ñ –¥–æ—Ä–æ–≥–∏)</div>
            </div>
            
            <div className="p-3 bg-gray-50 rounded">
              <div className="text-lg font-bold text-gray-800">
                {q2Results?.value.toLocaleString() || '‚Äî'} —Ç–∏—Å. –≥—Ä–Ω
              </div>
              <div className="text-xs text-gray-600">Q‚ÇÇ (–ú—ñ—Å—Ü–µ–≤—ñ –¥–æ—Ä–æ–≥–∏)</div>
            </div>
            
            <div className="p-3 bg-blue-50 rounded border border-blue-200">
              <div className="text-lg font-bold text-blue-800">
                {(q1Results && q2Results) ? 
                  (q1Results.value + q2Results.value).toLocaleString() : '‚Äî'} —Ç–∏—Å. –≥—Ä–Ω
              </div>
              <div className="text-xs text-blue-600">–ó–∞–≥–∞–ª—å–Ω–∏–π –±—é–¥–∂–µ—Ç</div>
            </div>
          </div>

          {budgetStats.hasData && (
            <div className="mt-4 p-3 bg-green-50 rounded border border-green-200">
              <div className="text-sm text-green-700">
                <strong>–°—Ç–∞—Ç—É—Å –≤ –ë–ª–æ—Ü—ñ 3:</strong>
              </div>
              <div className="grid grid-cols-2 gap-4 mt-2 text-xs">
                <div>
                  <div>–ó–∞–≥–∞–ª—å–Ω–∏–π –±—é–¥–∂–µ—Ç: <strong>{budgetStats.totalBudget.toLocaleString()}</strong> —Ç–∏—Å. –≥—Ä–Ω</div>
                  <div>Q‚ÇÅ: <strong>{budgetStats.q1Budget.toLocaleString()}</strong> —Ç–∏—Å. –≥—Ä–Ω</div>
                  <div>Q‚ÇÇ: <strong>{budgetStats.q2Budget.toLocaleString()}</strong> —Ç–∏—Å. –≥—Ä–Ω</div>
                </div>
                {budgetStats.allocation && (
                  <div>
                    <div>–ü–æ—Ç–æ—á–Ω–∏–π —Ä–µ–º–æ–Ω—Ç: <strong>{budgetStats.allocation.currentRepair.toLocaleString()}</strong> —Ç–∏—Å. –≥—Ä–Ω</div>
                    <div>–ö–∞–ø—ñ—Ç–∞–ª—å–Ω–∏–π —Ä–µ–º–æ–Ω—Ç: <strong>{budgetStats.allocation.capitalRepair.toLocaleString()}</strong> —Ç–∏—Å. –≥—Ä–Ω</div>
                    <div>–†–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è: <strong>{budgetStats.allocation.reconstruction.toLocaleString()}</strong> —Ç–∏—Å. –≥—Ä–Ω</div>
                  </div>
                )}
              </div>
            </div>
          )}
          
          <div className="text-xs text-gray-500">
            –°–µ—Å—ñ—è: {sessionId} | 
            –°—Ç–∞–Ω: {isDataSent ? '–ü–µ—Ä–µ–¥–∞–Ω–æ' : '–ì–æ—Ç–æ–≤–æ –¥–æ –ø–µ—Ä–µ–¥–∞—á—ñ'}
          </div>
          
          <Button 
            onClick={sendDataToBlockThree}
            disabled={!q1Results || !q2Results || !sessionId}
            className={`w-full py-3 text-lg h-auto ${
              isDataSent 
                ? 'bg-green-600 hover:bg-green-700' 
                : 'bg-blue-600 hover:bg-blue-700'
            } text-white`}
          >
            {isDataSent ? (
              <>‚úÖ –î–∞–Ω—ñ –ø–µ—Ä–µ–¥–∞–Ω—ñ - –ü–µ—Ä–µ—Ä–∞—Ö—É–≤–∞—Ç–∏ —ñ –ø–µ—Ä–µ–¥–∞—Ç–∏ –∑–Ω–æ–≤—É</>
            ) : (
              <>üì§ –ü–µ—Ä–µ–¥–∞—Ç–∏ –¥–∞–Ω—ñ –≤ –ë–ª–æ–∫ 3 –¥–ª—è –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–º–æ–Ω—Ç—ñ–≤</>
            )}
          </Button>

          <div className="text-xs text-gray-500 text-center">
            üí° –ü—ñ—Å–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –¥–∞–Ω–∏—Ö –≤–∏ –∑–º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —ó—Ö –¥–ª—è –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–º–æ–Ω—Ç–Ω–∏—Ö —Ä–æ–±—ñ—Ç —É –ë–ª–æ—Ü—ñ 3
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
const modifyItemsWithLineBreak = (items: BudgetItem[]): ExtendedBudgetItem[] => {
  return items.map(item => {
    // –î–µ–ª–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, —É—á–∏—Ç—ã–≤–∞—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    let modifiedName = item.name;

    if (item.id === "Q–¥–∑") {
      modifiedName = "–û–±—Å—è–≥ –±—é–¥–∂–µ—Ç–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤, —â–æ —Å–ø—Ä—è–º–æ–≤—É—î—Ç—å—Å—è –Ω–∞ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞, —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó, –∫–∞–ø—ñ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–µ–º–æ–Ω—Ç—ñ–≤\n—ñ —É—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ—Ä—ñ–≥ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –¥–µ—Ä–∂–∞–≤–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è";
    } 
    else if (item.id === "Q–ø–ø") {
      modifiedName = "–û–±—Å—è–≥ –±—é–¥–∂–µ—Ç–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤, —â–æ —Å–ø—Ä—è–º–æ–≤—É—î—Ç—å—Å—è –Ω–∞ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –∑–∞—Ö–æ–¥—ñ–≤ –∑ —Ä–æ–∑–≤–∏—Ç–∫—É, –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞, —Ä–µ–º–æ–Ω—Ç—É, –æ–±–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è, –º–æ–¥–µ—Ä–Ω—ñ–∑–∞—Ü—ñ—ó\n—Ç–∞ —É—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—É–Ω–∫—Ç—ñ–≤ –ø—Ä–æ–ø—É—Å–∫—É —á–µ—Ä–µ–∑ –¥–µ—Ä–∂–∞–≤–Ω–∏–π –∫–æ—Ä–¥–æ–Ω –¥–ª—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–æ–≥–æ —Å–ø–æ–ª—É—á–µ–Ω–Ω—è";
    } 
    else if (item.id === "Q–º—ñ–∂–Ω") {
      modifiedName = "–û–±—Å—è–≥ –±—é–¥–∂–µ—Ç–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤, —â–æ —Å–ø—Ä—è–º–æ–≤—É—î—Ç—å—Å—è –Ω–∞ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –∫–æ–Ω–∫—É—Ä—Å—ñ–≤ —ñ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫—É –¥–æ–≥–æ–≤–æ—Ä—ñ–≤ —â–æ–¥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ä–æ–±—ñ—Ç –∑ –Ω–æ–≤–æ–≥–æ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞, —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó, —Ä–µ–º–æ–Ω—Ç—É\n—ñ —É—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ—Ä—ñ–≥ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞ —Ä–∞—Ö—É–Ω–æ–∫ –∫–æ—à—Ç—ñ–≤ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏—Ö —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏—Ö –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–π, —ñ–Ω—à–∏—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä—ñ–≤ —Ç–∞ —ñ–Ω–≤–µ—Å—Ç–æ—Ä—ñ–≤, —Å–ø—ñ–≤—Ñ—ñ–Ω–∞–Ω—Å—É–≤–∞–Ω–Ω—è –∑–∞–∑–Ω–∞—á–µ–Ω–∏—Ö —Ä–æ–±—ñ—Ç –∑–≥—ñ–¥–Ω–æ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏, –∑–¥—ñ–π—Å–Ω–µ–Ω–Ω—è –∫–æ–Ω—Ç—Ä–æ–ª—é –∑–∞ —ó—Ö –≤–∏–∫–æ–Ω–∞–Ω–Ω—è–º —ñ –ø—Ä–∏–π–Ω—è—Ç—Ç—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ—Ä—ñ–≥ –≤ –µ–∫—Å–ø–ª—É–∞—Ç–∞—Ü—ñ—é";
    }
    else if (item.id === "Q–Ü–ê–°") {
      modifiedName = "–û–±—Å—è–≥ –±—é–¥–∂–µ—Ç–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤, —â–æ —Å–ø—Ä—è–º–æ–≤—É—î—Ç—å—Å—è –Ω–∞ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –∑–∞—Ö–æ–¥—ñ–≤ –∑—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–æ-–∞–Ω–∞–ª—ñ—Ç–∏—á–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –¥–æ—Ä–æ–∂–Ω—å–æ–≥–æ –≥–æ—Å–ø–æ–¥–∞—Ä—Å—Ç–≤–∞,\n—É —Ç–æ–º—É —á–∏—Å–ª—ñ —É—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö –±—é–¥–∂–µ—Ç–Ω–∏—Ö —É—Å—Ç–∞–Ω–æ–≤, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å —ó—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è";
    }
    else if (item.id === "Q–î–ü–ü") {
      modifiedName = "–û–±—Å—è–≥ –±—é–¥–∂–µ—Ç–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤, —â–æ —Å–ø—Ä—è–º–æ–≤—É—î—Ç—å—Å—è –Ω–∞ –∑–¥—ñ–π—Å–Ω–µ–Ω–Ω—è –≤–∏–ø–ª–∞—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—É/–∫–æ–Ω—Ü–µ—Å—ñ–æ–Ω–µ—Ä—É –ø–ª–∞—Ç–∏ –∑–∞ –µ–∫—Å–ø–ª—É–∞—Ç–∞—Ü—ñ–π–Ω—É –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–æ—ó –¥–æ—Ä–æ–≥–∏ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –¥–µ—Ä–∂–∞–≤–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è\n—Ç–∞ —ñ–Ω—à–∏—Ö –≤–∏–ø–ª–∞—Ç —É –ø–æ—Ä—è–¥–∫—É —Ç–∞ –Ω–∞ —É–º–æ–≤–∞—Ö, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–º, —É–∫–ª–∞–¥–µ–Ω–∏–º —É —Ä–∞–º–∫–∞—Ö –¥–µ—Ä–∂–∞–≤–Ω–æ-–ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞, —É —Ç–æ–º—É —á–∏—Å–ª—ñ –∫–æ–Ω—Ü–µ—Å—ñ–π–Ω–∏–º –¥–æ–≥–æ–≤–æ—Ä–æ–º";
    }

    return {
      ...item,
      name: modifiedName,
      attachedFiles: []
    };
  });
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const FileUploadComponent = ({ 
  itemId, 
  files = [], 
  onFilesChange 
}: { 
  itemId: string; 
  files: File[]; 
  onFilesChange: (itemId: string, files: File[]) => void; 
}) => {
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    const selectedFiles = Array.from(e.target.files || []);
    const updatedFiles = [...files, ...selectedFiles];
    onFilesChange(itemId, updatedFiles);
    
    // –û—á–∏—â–∞–µ–º input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞
    if (fileInputRef.current) {
      fileInputRef.current.value = '';
    }
  };

  const removeFile = (index: number) => {
    const updatedFiles = files.filter((_, i) => i !== index);
    onFilesChange(itemId, updatedFiles);
  };

  const formatFileSize = (bytes: number): string => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  return (
    <div className="space-y-2">
      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <div className="flex items-center gap-2">
        <input
          ref={fileInputRef}
          type="file"
          multiple
          onChange={handleFileUpload}
          accept=".pdf,.doc,.docx,.xls,.xlsx,.txt,.jpg,.jpeg,.png"
          className="hidden"
          id={`file-upload-${itemId}`}
        />
        <label
          htmlFor={`file-upload-${itemId}`}
          className="cursor-pointer inline-flex items-center px-3 py-1 text-xs border border-gray-300 rounded hover:bg-gray-50"
        >
          <UploadIcon className="h-3 w-3 mr-1" />
          –î–æ–¥–∞—Ç–∏ —Ñ–∞–π–ª
        </label>
        {files.length > 0 && (
          <span className="text-xs text-gray-500">
            {files.length} —Ñ–∞–π–ª{files.length > 1 ? '—ñ–≤' : ''}
          </span>
        )}
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ */}
      {files.length > 0 && (
        <div className="space-y-1">
          {files.map((file, index) => (
            <div
              key={index}
              className="flex items-center justify-between p-2 bg-gray-50 rounded text-xs"
            >
              <div className="flex items-center gap-2 flex-1 min-w-0">
                <FileIcon className="h-3 w-3 text-gray-500 flex-shrink-0" />
                <div className="truncate flex-1">
                  <div className="font-medium truncate">{file.name}</div>
                  <div className="text-gray-500">{formatFileSize(file.size)}</div>
                </div>
              </div>
              <Button
                onClick={() => removeFile(index)}
                variant="ghost"
                size="sm"
                className="h-auto p-1 text-red-500 hover:text-red-700"
              >
                <XIcon className="h-3 w-3" />
              </Button>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –±–ª–æ–∫–∞ 1: –†–∞—Å—á–µ—Ç –æ–±—ä–µ–º–∞ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Ä–æ–≥ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
const StateRoadFundingBlock = ({ 
  onResultsChange 
}: { 
  onResultsChange?: (q1: number, items: ExtendedBudgetItem[]) => void 
}) => {
  const [stateRoadBudget, setStateRoadBudget] = useState<ExtendedBudgetItem[]>(
    modifyItemsWithLineBreak(initialStateRoadItems)
  );
  const [q1Result, setQ1Result] = useState<number | null>(null);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
  const handleInputChange = (id: string, value: string) => {
    const newValue = value === "" ? null : parseFloat(value);
    setStateRoadBudget(prev => 
      prev.map(item => 
        item.id === id ? { ...item, value: newValue } : item
      )
    );
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  const handleDocumentChange = (id: string, document: string) => {
    setStateRoadBudget(prev => 
      prev.map(item => 
        item.id === id ? { ...item, normativeDocument: document } : item
      )
    );
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
  const handleFilesChange = (id: string, files: File[]) => {
    setStateRoadBudget(prev => 
      prev.map(item => 
        item.id === id ? { ...item, attachedFiles: files } : item
      )
    );
  };

  // –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞
  const handleCalculate = () => {
    // –ü–µ—Ä–µ–¥–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    const originalStateRoadItems = initialStateRoadItems.map((original, index) => {
      return {
        ...original,
        value: stateRoadBudget[index].value,
        normativeDocument: stateRoadBudget[index].normativeDocument
      };
    });

    const qdzValue = originalStateRoadItems.find(item => item.id === "Q–¥–∑")?.value;
    
    if (qdzValue === null || qdzValue === undefined) {
      alert("–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è Q–¥–∑!");
      return;
    }

    const result = calculateQ1(originalStateRoadItems);
    setQ1Result(result);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    if (onResultsChange) {
      onResultsChange(result as number, stateRoadBudget);
    }
  };

  return (
    <Card className="mb-8 w-full border-black shadow-sm rounded-none">
      <CardHeader className="bg-white border-b border-black">
        <CardTitle className="text-xl font-bold text-gray-800">
          –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –æ–±—Å—è–≥—É –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ —Ñ—ñ–Ω–∞–Ω—Å—É–≤–∞–Ω–Ω—è —Ä–æ–∑–≤–∏—Ç–∫—É —Ç–∞ —É—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ—Ä—ñ–≥ –¥–µ—Ä–∂–∞–≤–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è        
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        <div className="w-full overflow-x-auto">
          <Table className="w-full">
            <TableHeader>
              <TableRow>
                <TableHead className="w-16 bg-white">–ü–æ–∫–∞–∑–Ω–∏–∫</TableHead>
                <TableHead className="w-32 bg-white">–û–±—Å—è–≥, —Ç–∏—Å.–≥—Ä–Ω.</TableHead>
                <TableHead className="w-1/4 bg-white">–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç / –§–∞–π–ª–∏</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {stateRoadBudget.map((item) => (
                <TableRow key={item.id} className="hover:bg-gray-50">
                  <TableCell className="font-medium">
                    <TooltipProvider>
                      <Tooltip>
                        <TooltipTrigger asChild>
                          <div className="flex items-start">
                            <div style={{ whiteSpace: 'pre-line' }}>{item.name}</div>
                            <InfoCircledIcon className="ml-2 h-4 w-4 text-gray-400 mt-1 flex-shrink-0" />
                          </div>
                        </TooltipTrigger>
                        <TooltipContent className="max-w-md bg-black text-white">
                          <p>{item.tooltip}</p>
                        </TooltipContent>
                      </Tooltip>
                    </TooltipProvider>
                  </TableCell>
                  <TableCell className="text-center font-medium py-3">{item.id}</TableCell>
                  <TableCell>
                    <Input 
                      type="number" 
                      value={item.value === null ? "" : item.value.toString()}
                      onChange={(e) => handleInputChange(item.id, e.target.value)}
                      placeholder="0"
                      className="w-full border-black rounded-none"
                    />
                  </TableCell>
                  <TableCell className="space-y-2">
                    <Input 
                      value={item.normativeDocument || ""}
                      onChange={(e) => handleDocumentChange(item.id, e.target.value)}
                      placeholder="–ù–∞–∑–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
                      className="w-full border-black rounded-none"
                    />
                    <FileUploadComponent
                      itemId={item.id}
                      files={item.attachedFiles || []}
                      onFilesChange={handleFilesChange}
                    />
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>

        <div className="mt-2 w-full">
          <div className="text-lg font-semibold text-gray-700">
            –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ Q<sub>1</sub> = Q<sub>–¥–∑</sub> - Q<sub>–ø–ø</sub> - Q<sub>–º—ñ–∂–Ω</sub> - Q<sub>–Ü–ê–°</sub> - Q<sub>–Ω</sub> - Q<sub>–ª—ñ–∫</sub> - Q<sub>–≤–ø</sub> - Q<sub>—É–ø—Ä</sub> - Q<sub>–î–ü–ü</sub>
          </div>
        </div>

        <Button 
          onClick={handleCalculate} 
          className="mt-2 w-36 bg-black text-white py-3 text-xl h-auto rounded-none"
        >
          –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏
        </Button>

        {q1Result !== null && (
          <div className="mt-4 p-4 bg-white rounded-none w-full border border-green-700">
            <div className="font-bold text-xl text-center text-gray-800">–†–ï–ó–£–õ–¨–¢–ê–¢!</div>
            <div className="text-lg mt-2 text-center text-gray-800">Q<sub>1</sub> = {q1Result.toLocaleString()} —Ç–∏—Å. –≥—Ä–Ω</div>
          </div>
        )}
      </CardContent>
    </Card>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –±–ª–æ–∫–∞ 2: –†–∞—Å—á–µ—Ç –æ–±—ä–µ–º–∞ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Ä–æ–≥ –º–µ—Å—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
const LocalRoadFundingBlock = ({ 
  onResultsChange 
}: { 
  onResultsChange?: (q2: number, items: ExtendedBudgetItem[]) => void 
}) => {
  const [localRoadBudget, setLocalRoadBudget] = useState<ExtendedBudgetItem[]>(
    modifyItemsWithLineBreak(initialLocalRoadItems)
  );
  const [q2Result, setQ2Result] = useState<number | null>(null);

  const handleInputChange = (id: string, value: string) => {
    const newValue = value === "" ? null : parseFloat(value);
    setLocalRoadBudget(prev => 
      prev.map(item => 
        item.id === id ? { ...item, value: newValue } : item
      )
    );
  };

  const handleDocumentChange = (id: string, document: string) => {
    setLocalRoadBudget(prev => 
      prev.map(item => 
        item.id === id ? { ...item, normativeDocument: document } : item
      )
    );
  };

  const handleFilesChange = (id: string, files: File[]) => {
    setLocalRoadBudget(prev => 
      prev.map(item => 
        item.id === id ? { ...item, attachedFiles: files } : item
      )
    );
  };

  const handleCalculate = () => {
    // –ü–µ—Ä–µ–¥–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    const originalLocalRoadItems = initialLocalRoadItems.map((original, index) => {
      return {
        ...original,
        value: localRoadBudget[index].value,
        normativeDocument: localRoadBudget[index].normativeDocument
      };
    });

    const qmzValue = originalLocalRoadItems.find(item => item.id === "Q–º–∑")?.value;
    
    if (qmzValue === null || qmzValue === undefined) {
      alert("–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è Q–º–∑!");
      return;
    }

    const result = calculateQ2(originalLocalRoadItems);
    setQ2Result(result);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    if (onResultsChange) {
      onResultsChange(result as number, localRoadBudget);
    }
  };

  return (
    <Card className="w-full border-black shadow-sm rounded-none">
      <CardHeader className="bg-white border-b border-black">
        <CardTitle className="text-xl font-bold text-gray-900">
          –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –æ–±—Å—è–≥—É –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ —Ñ—ñ–Ω–∞–Ω—Å—É–≤–∞–Ω–Ω—è —Ä–æ–∑–≤–∏—Ç–∫—É —Ç–∞ —É—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ—Ä—ñ–≥ –º—ñ—Å—Ü–µ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è        
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        <div className="w-full overflow-x-auto">
          <Table className="w-full">
            <TableHeader>
              <TableRow>
                <TableHead className="w-16 bg-white">–ü–æ–∫–∞–∑–Ω–∏–∫</TableHead>
                <TableHead className="w-32 bg-white">–û–±—Å—è–≥, —Ç–∏—Å.–≥—Ä–Ω.</TableHead>
                <TableHead className="w-1/4 bg-white">–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç / –§–∞–π–ª–∏</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {localRoadBudget.map((item) => (
                <TableRow key={item.id} className="hover:bg-gray-50">
                  <TableCell className="font-medium">
                    <TooltipProvider>
                      <Tooltip>
                        <TooltipTrigger asChild>
                          <div className="flex items-start">
                            <div style={{ whiteSpace: 'pre-line' }}>{item.name}</div>
                            <InfoCircledIcon className="ml-2 h-4 w-4 text-gray-400 mt-1 flex-shrink-0" />
                          </div>
                        </TooltipTrigger>
                        <TooltipContent className="max-w-md bg-black text-white">
                          <p>{item.tooltip}</p>
                        </TooltipContent>
                      </Tooltip>
                    </TooltipProvider>
                  </TableCell>
                  <TableCell className="text-center font-medium py-3">{item.id}</TableCell>
                  <TableCell>
                    <Input 
                      type="number" 
                      value={item.value === null ? "" : item.value.toString()}
                      onChange={(e) => handleInputChange(item.id, e.target.value)}
                      placeholder="0"
                      className="w-full border-black rounded-none"
                    />
                  </TableCell>
                  <TableCell className="space-y-2">
                    <Input 
                      value={item.normativeDocument || ""}
                      onChange={(e) => handleDocumentChange(item.id, e.target.value)}
                      placeholder="–ù–∞–∑–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
                      className="w-full border-black rounded-none"
                    />
                    <FileUploadComponent
                      itemId={item.id}
                      files={item.attachedFiles || []}
                      onFilesChange={handleFilesChange}
                    />
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>

        <div className="mt-6 w-full">
          <div className="text-lg font-semibold text-gray-700">
            –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ Q<sub>2</sub> = Q<sub>–º–∑</sub> - Q<sub>–∫—Ä–µ–¥</sub> - Q<sub>–Ω2</sub> - Q<sub>–î–ü–ü2</sub> - Q<sub>–∫–æ–º</sub>
          </div>
        </div>

        <Button 
          onClick={handleCalculate} 
          className="mt-4 w-36 bg-black text-white py-3 text-xl h-auto rounded-none"
        >
          –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏
        </Button>

        {q2Result !== null && (
          <div className="mt-4 p-4 bg-white rounded-none w-full border border-green-700">
            <div className="font-bold text-xl text-center text-gray-800">–†–ï–ó–£–õ–¨–¢–ê–¢!</div>
            <div className="text-lg mt-2 text-center text-gray-800">Q<sub>2</sub> = {q2Result.toLocaleString()} —Ç–∏—Å. –≥—Ä–Ω</div>
          </div>
        )}
      </CardContent>
    </Card>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const RoadFundingApp: React.FC = () => {
  const [sessionId, setSessionId] = useState<string | null>(null);
  const [q1Results, setQ1Results] = useState<{ value: number; items: ExtendedBudgetItem[] } | null>(null);
  const [q2Results, setQ2Results] = useState<{ value: number; items: ExtendedBudgetItem[] } | null>(null);
  const [showSaveSuccess, setShowSaveSuccess] = useState(false);

  // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  React.useEffect(() => {
    const newSessionId = calculationResultsService.createSession();
    setSessionId(newSessionId);
  }, []);

  const handleQ1Results = (q1: number, items: ExtendedBudgetItem[]) => {
    setQ1Results({ value: q1, items });
  };

  const handleQ2Results = (q2: number, items: ExtendedBudgetItem[]) => {
    setQ2Results({ value: q2, items });
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–µ—Ä–≤–∏—Å
  const saveResults = () => {
    if (!q1Results || !q2Results) {
      alert("–°–ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ Q‚ÇÅ —Ç–∞ Q‚ÇÇ!");
      return;
    }

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º ExtendedBudgetItem –æ–±—Ä–∞—Ç–Ω–æ –≤ BudgetItem –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞
    const convertToBasicItems = (items: ExtendedBudgetItem[]): BudgetItem[] => {
      return items.map(({ attachedFiles, ...item }) => item);
    };

    const success = calculationResultsService.saveBlockOneResults(
      convertToBasicItems(q1Results.items),
      q1Results.value,
      convertToBasicItems(q2Results.items),
      q2Results.value
    );

    if (success) {
      setShowSaveSuccess(true);
      setTimeout(() => setShowSaveSuccess(false), 3000);
    }
  };

  return (
    <div className="min-h-screen p-6 w-full">
      <div className="w-full mx-auto">
        <Card className="mb-8 w-full border-black shadow-sm rounded-none">
          <CardHeader>
            <CardTitle className="text-3xl font-bold text-gray-800">
              –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –æ–±—Å—è–≥—É –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ —Ñ—ñ–Ω–∞–Ω—Å—É–≤–∞–Ω–Ω—è —Ä–æ–∑–≤–∏—Ç–∫—É —Ç–∞ —É—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ—Ä—ñ–≥ –¥–µ—Ä–∂–∞–≤–Ω–æ–≥–æ —Ç–∞ –º—ñ—Å—Ü–µ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è            
            </CardTitle>
            {sessionId && (
              <div className="text-sm text-gray-500 mt-2">
                –°–µ—Å—ñ—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤: {sessionId}
              </div>
            )}
          </CardHeader>
        </Card>

        {showSaveSuccess && (
          <Alert className="mb-6 border-green-500 bg-green-50">
            <AlertDescription className="text-green-700">
              ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ë–ª–æ–∫—É 1 —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –≤ —Å–µ—Å—ñ—ó —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤!
            </AlertDescription>
          </Alert>
        )}

        {/* –ë–ª–æ–∫ 1.1: –î–æ—Ä–æ–≥–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è */}
        <StateRoadFundingBlock onResultsChange={handleQ1Results} />

        {/* –ë–ª–æ–∫ 1.2: –î–æ—Ä–æ–≥–∏ –º–µ—Å—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è */}
        <LocalRoadFundingBlock onResultsChange={handleQ2Results} />

        {/* –°–≤–æ–¥–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
        {q1Results && q2Results && (
          <Card className="mt-8 w-full border-green-500 shadow-sm rounded-none">
            <CardHeader className="bg-green-50 border-b border-green-500">
              <BlockThreeIntegration 
                q1Results={q1Results}
                q2Results={q2Results}
                sessionId={sessionId}
              />
              <CardTitle className="text-xl font-bold text-green-800">
                –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ë–ª–æ–∫—É 1
              </CardTitle>
            </CardHeader>
            <CardContent className="p-6">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div className="text-center">
                  <div className="text-3xl font-bold text-gray-800">
                    {q1Results.value.toLocaleString()}
                  </div>
                  <div className="text-sm text-gray-600">Q‚ÇÅ (—Ç–∏—Å. –≥—Ä–Ω)</div>
                  <div className="text-xs text-gray-500">–î–µ—Ä–∂–∞–≤–Ω—ñ –¥–æ—Ä–æ–≥–∏</div>
                </div>
                <div className="text-center">
                  <div className="text-3xl font-bold text-gray-800">
                    {q2Results.value.toLocaleString()}
                  </div>
                  <div className="text-sm text-gray-600">Q‚ÇÇ (—Ç–∏—Å. –≥—Ä–Ω)</div>
                  <div className="text-xs text-gray-500">–ú—ñ—Å—Ü–µ–≤—ñ –¥–æ—Ä–æ–≥–∏</div>
                </div>
                <div className="text-center">
                  <div className="text-3xl font-bold text-green-700">
                    {(q1Results.value + q2Results.value).toLocaleString()}
                  </div>
                  <div className="text-sm text-gray-600">–ó–∞–≥–∞–ª—å–Ω–∏–π –±—é–¥–∂–µ—Ç (—Ç–∏—Å. –≥—Ä–Ω)</div>
                  <div className="text-xs text-gray-500">Q‚ÇÅ + Q‚ÇÇ</div>
                </div>
              </div>
              
              <Button 
                onClick={saveResults}
                className="mt-6 w-full bg-green-600 hover:bg-green-700 text-white py-3 text-lg h-auto"
              >
                üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤ —Å–µ—Å—ñ—é —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤
              </Button>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
};

export default RoadFundingApp;